<template>
	<div class="content">
		<!-- 
			weex组件文档
			https://weex.apache.org/zh/docs/components/slider.html
		--> 
		
		<!-- 标题栏 -->
		<div class="page-header">
			<!-- 状态栏占位 -->
			<div :style="{ height: statusBarHeight }"></div>
			<div class="page-header-wrapper">
				<div class="page-header-left">
					<!-- <text class="logo">Logo</text> -->
					<text class="logo yticon">{{titles}}</text>
				</div>
				
			</div>
		</div>
		<!-- uni 官方顶部选项卡组件 -->
		<uni-tab-bar :drag="true" :tab-bars="tabBars" :tab-index="tabCurrentIndex" @tabChange="tabChange"></uni-tab-bar>
		
		<!-- slider就是uni swiper -->
		<slider class="slider" :index="tabCurrentIndex" :infinite="false" @change="tabChange">
			
			<!-- list 垂直滚动列表组件 -->
			<list v-for="(tabItem, tabIndex) in tabBars" :key="tabItem.id" class="list-content">
				<!-- refresh 下拉刷新组件  
				* 	 weex 的refresh和loading组件在ios效果很好，但是在安卓端效果并不好
				* -->
				<refresh class="loading" @refresh="onRefresh" :display="tabItem.refreshing ? 'show' : 'hide'">
					<loading-indicator v-if="tabItem.refreshing" class="loading-icon"></loading-indicator>
					<text class="loading-text">{{tabItem.refreshing?'正在加载..': '下拉刷新数据'}}</text>
				</refresh>
				
				<!-- 新闻列表 -->
				<cell v-for="(item, index) in tabItem.newsList" :key="index" class="news-item" @click="navToDetails(item)">
					<text :class="['title', item.thumb=='null'?'':item.thumb.length==1?'title1':'title2' ]">{{item.title}}</text>
					<div v-if="item.thumb!='null'" :class="['img-list', 'img-list'+item.thumb.length]">
						<div 
							v-for="(imgItem, imgIndex) in item.thumb" :key="imgIndex"
							:class="['img-wrapper','img-wrapper'+item.thumb.length]"
						>
							<image class="img" :src="urlpath + imgItem" />
						</div>
					</div>
					<div v-else class="img-empty"></div>
					<div :class="['bot', item.thumb=='null'?'':item.thumb.length==1?'bot1':'bot2']">
						<text class="author">{{item.get_user.name}}</text>
						<text class="time">{{item.created_at}}</text>
					</div>
				</cell>
				
				<!-- 加载更多组件 -->
				<loading class="loading" @loading="loadMore(tabItem)" :display="tabItem.loadMoreStatus==1 ? 'show' : 'hide'">
					<loading-indicator v-if="tabItem.loadMoreStatus==1" class="loading-icon"></loading-indicator>
					<text class="loading-text">{{tabItem.loadMoreStatus==0?'上拉显示更多':tabItem.loadMoreStatus==1?'正在加载..':'没有更多数据了'}}</text>
				</loading>
			</list>
		 
		</slider>
	</div>
</template>

<script>
	import uniTabBar from '@/components/mix-news/tab-nvue/tabbar.nvue'
	//远程连接nvue和vue不一样不能直接从main.js中用里面挂在的
	import api from '@/components/vmeitime-http/'
	const domModule = weex.requireModule('dom')
	export default {
		/**
		 * 大部分js可以复用vue中写的
		 * 直接混入即可
		 */
		components: {
			uniTabBar,
		},
		data(){
			return {
				titles: '关注',
				tabCurrentIndex: 0, //当前选项卡索引
				scrollLeft: 0, //顶部选项卡左滑距离
				enableScroll: true,
				statusBarHeight: '0wx', //状态栏占位高度
				tabBars: [], //文章分类数据
			}
		},
		beforeCreate(){
			const domModule = weex.requireModule('dom')
			domModule.addRule('fontFace', {
			    'fontFamily': "yticon",
			    'src': "url('https://at.alicdn.com/t/font_1078604_3mrhac2o3oi.ttf')",
			});
		},
		created() {
			//获取状态栏高度给顶部占位节点
			uni.getSystemInfo({
				success: res=>{
					this.statusBarHeight = res.statusBarHeight + 'wx';
				}
			})
			//获取数据，方法通过mixin混入
			this.loadTabbars();
		},
		methods: {
			tabChange(e) {
				this.tabCurrentIndex = e.index;
				
				//第一次切换tab，动画结束后需要加载数据
				let tabItem = this.tabBars[this.tabCurrentIndex];
				if(this.tabCurrentIndex !== 0 && tabItem.loaded !== true){
					this.loadNewsList('add');
					tabItem.loaded = true;
				}
			},
			//获取分类
			loadTabbars(){
				//获取文章分类
				api.test('/api/getCategorys').then((res)=>{
					let v = JSON.parse(res.data);
					if (v.code=="200"){
						let tabList = v.data;
						tabList.forEach(item=>{
							item.newsList = [];
							item.loadMoreStatus = 0;  //加载更多 0加载前，1加载中，2没有更多了
							item.refreshing = 0;
						})
						this.tabBars = tabList;
						this.loadNewsList('add');
						console.log('看看', this.tabBars)
					}
				   // this.res = '请求结果 : ' + JSON.stringify(res);
				}).catch((err)=>{
				    console.log('数据请求失败', err);
				})
			},
			//新闻列表
			loadNewsList(type){
				let tabItem = this.tabBars[this.tabCurrentIndex];
				//type add 加载更多 refresh下拉刷
				if(type === 'add'){
					if(tabItem.loadMoreStatus === 2){
						return;
					}
					tabItem.loadMoreStatus = 1;
				}
				// #ifdef APP-PLUS
				else if(type === 'refresh'){
					tabItem.refreshing = true;
				}
				// #endif
				//获取文章列表
				api.test('/api/getArticles',{
						limit:'20', //每页10个数据
						page:'1', //当前页数默认第一页
						reload:'', //搜索内容
						ifs:'', //搜索的列名
						category_id:tabItem.id,//分类id
						articles_ids:tabItem.id //分类id数组
				}).then((res)=>{
					let data = JSON.parse(res.data);
					if(data.code == "200"){
						console.log('数据请求成功', data.msg)
						let list = data.data.data //获取数据
						for (var i in list){    //把文章中的图片json格式转换成数组
							if(list[i].thumb!='null'){
							    list[i].thumb = JSON.parse(list[i].thumb);
							}
						}
				/* 		list.sort((a,b)=>{
							return Math.random() > .5 ? -1 : 1; //静态数据打乱顺序
						}) */
						if(type === 'refresh'){
							tabItem.newsList = []; //刷新前清空数组
						}
						list.forEach(item=>{
							tabItem.newsList.push(item);
						})
						console.log('数据请求成功', list)
						//下拉刷新 关闭刷新动画
						if(type === 'refresh'){
							this.$refs.mixPulldownRefresh && this.$refs.mixPulldownRefresh.endPulldownRefresh();
							// #ifdef APP-PLUS
							tabItem.refreshing = false;
							// #endif
							tabItem.loadMoreStatus = 0;
						}
						//上滑加载 处理状态
						if(type === 'add'){
							tabItem.loadMoreStatus = tabItem.newsList.length > 40 ? 2: 0;
						}
					}
				   // this.res = '请求结果 : ' + JSON.stringify(res);
				}).catch((err)=>{
					console.log('数据请求失败', err);
				})
			},
			//新闻详情
			navToDetails(item){
				let data = {
					id: item.id,
					title: item.title,
					author: item.get_user.name,
					time: item.created_at
				}
				//在本目录所以路径直接文件名
				let url = 'article?data='+JSON.stringify(data)
				uni.navigateTo({
					url: url
				})
			},	
			//下拉刷新
			onRefresh(e){
				this.loadNewsList('refresh');
			},
			//加载更多
			loadMore(tabItem){
				this.loadNewsList('add');
			}
		}
	}
</script>

<style>
/*  #ifdef  APP-PLUS-NVUE  */
	/* 字体图标 */
	.yticon {
		font-family: yticon;
	}
	/**
	 * weex css限制
	 * 选择器不支持嵌套
	 * 子节点不继承父节点样式（重要）
	 * 仅支持 flex布局 （这个还不错）， 默认为display:flex; flex-direction:column;
	 * 
	 * 注：我对weex也是一知半解，有说错的麻烦指出
	 */
	.content{
		flex: 1;
		background-color: #fff;
	}
	/* 顶部标题栏 */
	.page-header{
		background-color: #ec706b;
	}
	.page-header-wrapper{
		flex-direction: row;
		justify-content: center;
		align-items: center;
		height: 100px;
		padding: 0px 20px;
	}
	.page-header-left{
		opacity: 0.9;
	}
	.logo{
		font-size: 40px;
		color: #fff;
	}
	.page-header-center{
		flex: 1;
		padding: 0px 30px 0 20px;
	}
	.search-input{
		height: 60px;
		font-size:28px;
		color: #fff;
		text-align: center;
		line-height: 60px;
		background-color: rgba(255,255,255,.2);
		border-radius: 100px;
	}
	.page-header-right{
		width: 50px;
		align-items: center;
	}
	.contribute-icon{
		width: 50px;
		height: 44px;
	}
	.contribute-text{
		font-size: 20px;
		color: #fff;
	}
	
	
	.slider{
		flex: 1;
		background-color: #f8f8f8;
	}
	.list-content{
		flex: 1;
		background-color: #fff;
	}
	/* 下拉刷新 加载更多 */
	.loading {
		flex-direction: row;
		align-items: center;
		justify-content: center;
		width: 750px;
		height: 80px;
	}
	.loading-text{
		font-size: 28px;
		color: #888;
	}
	.loading-icon{
		height: 40px;
		width: 40px;
		color: #999999;
		margin-right: 10px;
	}
	
	
	

	/* 新闻列表  */
	.news-item{
		width: 750px;
		padding: 24px 30px;
		border-bottom-width: 1px;
		border-color: #eee;
		background-color: #fff;
	}
	.title{
		font-size: 32px;
		color: #303133;
		line-height: 46px;
	}
	.bot{
		flex-direction: row;
	}
	.author{
		font-size: 26px;
		color: #aaa;
	}
	.time{
		font-size: 26px;
		color: #aaa;
		margin-left: 20px;
	}
	.img-list{
		flex-shrink: 0;
		flex-direction: row;
		background-color: #fff;
		width: 220px;
		height: 140px;
	}
 	.img-wrapper{
		flex: 1;
		flex-direction: row;
		height: 140px;
		position: relative;
	}
	.img{
		flex: 1;
	}
	.img-empty{
		height: 20px;
	}
	.video-tip{
		position: absolute;
		left: 0;
		top: 0;
		display: flex;
		align-items: center;
		justify-content: center;
		flex: 1;
		background-color: rgba(0,0,0,.3);
	}
	/* 图在左 */
	.img-list1{
		position:absolute;
		left: 30px;
		top: 24px;
	}
	.title1{
		padding-left: 240px; 
	}
	.bot1{
		padding-left: 240px; 
		margin-top: 20px;
	}
	/* 图在右 */
	.img-list2{
		position:absolute;
		right: 30px;
		top: 24px;
	}
	.title2{
		padding-right: 210px; 
	}
	.bot2{
		margin-top: 20px;
	}
	/* 底部3图 */
	.img-list3{
		width: 700px;
		margin: 16px 0px;
	}
	.img-wrapper3{
		margin-right: 4px;
	}
	/* 底部大图 */
	.img-list-single{
		width: 690px;
		height: 240px;
		margin: 16px 0px;
	}
	.img-wrapper-single{
		height: 240px;
		margin-right: 0px;
	}
	/*  #endif  */
</style>
